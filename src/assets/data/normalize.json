{
    "normalize" : [
        {
            "header" : "Heimdall Data Format",
            "desc" : "One major barrier to security automation is having multiple security tools that do not use a common format for representing security data. MITRE SAF uses the Heimdall Data Format (HDF) as a common format to represent normalized security data. HDF files record vital security data about a completed validation test, such as the test code, description, attributes, and outcome. This allows for the aggregation and analysis of test results from a wide range of validation tools at once."
        },
        {
            "header" : "HDF Core Elements",
            "desc" : "The HDF uses a common alignment point of the core elements of testing results data so that we can transform multiple formats. The HDF defines the following core data elements to standardize the testing results data from various formats.",
            "bullets" : [
                "Test Title (required) – High level overview of the test(s) goal",
                "Test Description (required) – Details on the intent and possible impact",
                "Test Elements (required) – the individual tests that make up the actions in the ‘Check Text’",
                "Test Audit, aka ‘check text’ (required) – the validation actions we are asking of the end user",
                "Test Remediation, aka ‘fix text’ (required) – the remediation actions we are asking of the end user",
                "NIST SP 800-53 Control Alignment(s) (required) – the NIST SP 800-53 security control this test(s) relates to",
                "DISA Common Correlation Index Identifier (CCI, optional but highly encouraged) – the specific CCI that the test(s) relate to",
                "Tags of other data tags specific to the source Benchmark (CIS, DISA STIG) – other data elements that enhance the context of the test(s)"
            ]
        },
        {
            "header" : "Heimdall Tools",
            "desc" : "MITRE created the <a href='https://heimdall-tools.mitre.org/' target='_blank'>Heimdall Tools</a> command line toolset to allow the conversion of output from widely used automated security testing tools into HDF. At present, Heimdall Tools can convert output from:",
            "bullets" : [
                "Sonarqube",
                "Fortify",
                "OWASP ZAP",
                "Burp Suite",
                "Nessus",
                "Snyk",
                "Nikto"
            ]
        },
        {
            "header" : "HDF InSpec Control Template Examples",
            "desc" : "As we have developed HDF, we have found these common elements help structure well-written and complete security automation baselines. Below are some examples of InSpec control structures that align to the MITRE HDF format.",
            "examples" : [
                {
                    "code" : {"platform": {"name": "aws","release": "aws-sdk-v2.11.162"},"profiles": [{"attributes": [],"controls": [{"code": ". . .","desc": "Ensure there are no publicly accessible S3 buckets","descriptions": [{"data": "Ensure there are no publicly accessible S3 buckets","label": "default"}],"id": "s3-buckets-no-public-access","impact": 0.7,"refs": [],"results": [{"code_desc": "S3 Bucket s3-demo-bucket-with-public-objects should not be public","run_time": 0.130646,"start_time": "2018-11-18T21:02:51-05:00","status": "passed"}],"source_location": {"line": 1,"ref": "./controls/aws_s3_bucket.rb"},"tags": {"check": "Review your AWS console and note if any S3 buckets are set to 'Public' . . .","nist": ["AC-6","Rev_4"],"severity": "high"},"title": "Ensure there are no publicly accessible S3 buckets"}],"copyright": "MITRE, 2018","copyright_email": "inspec@mitre.org","groups": [{"controls": ["s3-buckets-no-public-access"],"id": "controls/aws_s3_bucket.rb"}]}],"statistics": {"duration": 0.774471},"version": "3.0.46"},
                    "syntax" : "json",
                    "title" : "CIS Template"
                },
                {
                    "code" : "# encoding: UTF-8\n \ncontrol \"C-1.1.1.1\" do\n  title \"Ensure mounting of cramfs filesystems is disabled\"\n  desc  \"The `cramfs` filesystem type is a compressed read-only Linux\n  filesystem embedded in small footprint systems. A `cramfs` image can be \n  used without having to first decompress the image.\"\n \n  desc  \"rationale\", \"Removing support for unneeded filesystem types reduces\n  the local attack surface of the server. If this filesystem type is not needed,\n  disable it.\"\n  \n  impact 0.7\n  tag severity: 'high'\n  tag nist: [\"CM-6\"]\n  tag cis_scored: true\n  tag cis_version: 1.2.0\n  tag cis_level: 3\n  tag cis_controls: [\"5.1\"]\n  tag cis_cdc_version: 7\n  tag cis_rid: \"1.1.1.1\"\n \n  desc  \"check\", \"Run the following commands and verify the output is as \n  indicated:\n \n   # modprobe -n -v cramfs | grep -v mtd\n   install /bin/true\n   # lsmod | grep cramfs\"\n \n  desc \"fix\", \"Edit or create a file in the `/etc/modprobe.d/` directory ending in \n  .conf\n  Example: `vi /etc/modprobe.d/cramfs.conf`\n  and add the following line:\n  install cramfs /bin/true\n  Run the following command to unload the `cramfs` module:\n  # rmmod cramfs\"\n  \n  describe system do\n    it { should rock }\n  end\n \nend\n",
                    "syntax" : "ruby",
                    "title" : "STIG/SRG Template"
                }
            ]
        }
    ]
}